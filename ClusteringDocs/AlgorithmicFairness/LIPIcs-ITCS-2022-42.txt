42:20

Individual Fairness in Advertising Auctions Through Inverse Proportionality

IPA is able to achieve a constant fraction of the optimal approximation ratio. When the
approximation ratio is small, the guarantees provided in Theorem 20 do degrade with In(1/q).
An interesting direction for future work would be to try to close this gap and maintain a
constant fraction of the optimal social welfare even when the approximation ratio is small.

6 Future work

In this work we address the tradeoffs between fairness and social welfare through a simplistic
model that assumes that advertisers bid to maximize their utility in every auction. In reality,
advertisers have budgets and optimize for their long term returns. Incorporating fairness
constraints into these more general models of ad auctions is an interesting avenue for future
work. For the model we study, our work presents an alternative to the proportional allocation
mechanism of [7]. The two classes of allocation algorithms perform well under different
contexts, and it would be interesting to understand whether one can interpolate between the

two to obtain fairness guarantees as strong as those of proportional allocation while at the

 

same time achieving performance commensurate with that of inverse proportional allocation.
Finally, a very interesting open direction is to examine ad auction design under a group
fairness constraint.

—— References

1 Muhammad Ali, Piotr Sapiezynski, Miranda Bogen, Aleksandra Korolova, Alan Mislove, and
Aaron Rieke. Discrimination through optimization: How facebook’s ad delivery can lead to
biased outcomes. PACMHCT, 3(CSCW):199:1-199:30, 2019.

2 Julia Angwin and Terry Perris. Facebook lets advertisers exclude users by race. ProPublica,
2016.

3 Julia Angwin, Noam Scheiber, and Ariana Tobin. Facebook job ads raise concerns about age
discrimination. The New York Times in collaboration with ProPublica, 2017.

4  Maria-Florina Balcan, Travis Dick, Ritesh Noothigattu, and Ariel D. Procaccia. Envy-free
classification. In Advances in Neural Information Processing Systems 32: Annual Conference on
Neural Information Processing Systems 2019, NeurIPS 2019, 8-14 December 2019, Vancouver,
BC, Canada, pages 1238-1248, 2019.

5  Toannis Caragiannis and Alexandros A. Voudouris. Welfare guarantees for proportional
allocations. Theory Comput. Syst., 59(4):581-599, 2016.

6 L. Elisa Celis, Anay Mehrotra, and Nisheeth K. Vishnoi. Toward controlling discrimination in
online ad auctions. In Proceedings of the 36th International Conference on Machine Learning,
ICML 2019, 9-15 June 2019, Long Beach, California, USA, pages 4456-4465, 2019.

7 Shuchi Chawla, Christina Ilvento, and Meena Jagadeesan. Multi-category fairness in sponsored
search auctions. In Proceedings of the 2020 Conference on Fairness, Accountability, and
Transparency, FAT* ’20, pages 348-358, New York, NY, USA, 2020. Association for Computing
Machinery.

8 George Christodoulou, Alkmini Sgouritsa, and Bo Tang. On the efficiency of the proportional
allocation mechanism for divisible resources. Theory Comput. Syst., 59(4):600-618, 2016.

9 Amit Datta, Michael Carl Tschantz, and Anupam Datta. Automated experiments on ad
privacy settings. PoPETs, 2015(1):92-112, 2015.

10 Cynthia Dwork, Moritz Hardt, Toniann Pitassi, Omer Reingold, and Richard S. Zemel.
Fairness through awareness. In 3rd Innovations in Theoretical Computer Science, ITCS 2012,
Cambridge, MA, USA, January 8-10, 2012, pages 214-226, 2012.

11 Cynthia Dwork and Christina Ilvento. Fairness under composition. In 10th Innovations
in Theoretical Computer Science Conference, ITCS 2019, January 10-12, 2019, San Diego,
California, USA, pages 33:1-33:20, 2019.

42:6

Individual Fairness in Advertising Auctions Through Inverse Proportionality

Total-variation and subset fairness. In [7], we showed that PA satisfies a stronger fairness
guarantee called total variation fairness: the distributions over ads assigned to similar users
are not only close under ¢,, distance, but also close under ¢; or total variation distance.
Equivalently, total-variation fairness provides guarantees over any subset of ads, rather than
just a single ad. However, we observe that our family of IPA auctions does not always
satisfy total variation fairness. Indeed it appears to be challenging to satisfy this stronger
fairness property while also guaranteeing a constant factor approximation in social welfare.
In the full version of the paper, we show, however, that IPA can be adapted to achieve an
intermediate fairness guarantee that we call subset fairness: fairness is guaranteed over a
restricted collection of subsets of advertisers.

1.3. Other related work

While algorithmic fairness is by now an established area of study, theoretical work on fairness
in ad auctions is relatively new. There are two complementary sides to the fairness problem
in the context of ad auctions. As in our work, Celis et al. [6] study the problem from the
viewpoint of the platform — redesigning the ad auction so as to achieve fair outcomes. They
provide an optimization framework within which, given an explicit population of users and
bids over them, a platform can compute the optimal fair assignment of ads to users. Celis
et al. focus on algorithmic techniques for solving the optimization problem, comparing the
performance of their algorithm to the optimal fair solution; whereas our focus in this work is
on comparing the performance of our algorithm against the unfair optimum and therefore
characterizing the cost of fairness.

The complementary viewpoint is that of the advertisers — designing bidding and targetting
strategies that preemptively correct for unfairness introduced by the platform mechanism.
Nasr and Tschantz [19] design bidding strategies for advertisers aimed at obtaining parity
in impressions across fixed categories (such as gender). Gelauff et al. [12] likewise design
targetting strategies aimed at obtaining parity in outcomes or conversions across different
demographic groups. A key point of difference between these works and ours is that they focus
on the notion of group fairness whereas our work considers individual fairness guarantees.

Besides these works, the tradeoff between fairness and social welfare has also been studied

in other contexts such as classification problems (see, e.g., Hu and Chen [13]).

 

Complementary to algorithmic fairness, there is an extensive literature on fair division
that also considers the tension between fairness and social welfare. A major difference
between the algorithmic fairness and envy-freeness is that algorithmic fairness generally
focuses on individual qualifications, while envy-freeness generally focuses on individual
preferences, though recent work [7, 15, 4, 22] has proposed definitions which combine aspects
of envy-freeness and algorithmic fairness notions.

1.4 Outline for the rest of the paper

In Section 2, we present our model for fair ad auctions and describe the connection between
value stability and individual fairness. In Section 3, we describe Inverse Proportional

Allocation algorithms and state our main results on social welfare and value stability. In

 

Section 4, we prove the value stability results. In Section 5 we consider extensions of the
IPA mixed in with uniform allocation, and show that this family of allocation algorithms
achieves near optimal tradeoffs between social welfare and value stability.

In the full version of the paper, we also provide an empirical evaluation of inverse
proportional allocation on the Yahoo sponsored search auction dataset. Moreover, we
consider the stronger notion of subset fairness and develop fair allocation algorithms with
social welfare that degrade with the complexity of the subset collection.

42:18

Individual Fairness in Advertising Auctions Through Inverse Proportionality

Since the allocation is value-stable, it must satisfy a} < f(A) +a; < t+ f(A). Thus, the
approximation ratio for social welfare is a, + \~?(1 — a‘). Using the above bound on a‘, we
see that the approximation ratio is at most i + f(A) +A? (1 = i — f(A)) as desired. <<

The proof of Theorem 16 now follows directly.

Proof of Theorem 16. The theorem follows from Lemma 17 by substituting f(A) = 1— 74;
minimizing the expression over A; and recalling that ay = minze (0,1) (1 —af + git), which
can be written as minys1 (1 — Awe + ATED) =minysi (f(A) +A-72(01 = f(A). <

5.2 A simple extension of IPA

We now consider general value-stability constraints f, and consider the design of algorithms
that are value-stable for general f. As mentioned earlier, for every function f with
limyoo f(x) = 1, there exists a parameter ¢ > 0 such that f(x) < fe(x) for all x € [1, 00),
and so value stability for such functions can be achieved with an IPA algorithm. However,
this family excludes stability constraints f with lim;-,.. f(x) = ¢ < 1. With this shortcoming
in mind, we propose an extension of IPA that we call capped IPA. The idea is to run IPA
with probability c, so that the maximum difference between any two advertiser’s allocations
is always capped by c.

> Algorithm 18. The Capped Inverse Proportional Allocation algorithm with para-
meters £ and c applies the Inverse Proportional Algorithm with parameter ¢ with probability
c and uniformly assigns allocation across all advertisers with probability 1—c.

The value stability and social welfare properties of capped inverse proportional allocation
follow immediately from our analysis of IPA in the previous sections.

> Corollary 19. Let £ > 0 andc € [0,1] be parameters, and let k > 0 be any number
advertisers. The capped inverse proportional allocation algorithm with parameters € and c
is value stable with respect to any function f that satisfies f(A) > cfe(A) = c(1 — A~?*) for
all \ € [1,00). Moreover, this algorithm obtains a worst case approximation ratio for social
welfare of at least

(4-2 e \*
ESN +1 \e@41) }°

Proof. For any value vector v, we compare the allocation a of this capped IPA algorithm to
the allocation a’ of IPA with parameter ¢. For any i € [k], it holds that a; = ca + (1 —c)/k.
The value-stability and social welfare properties then follow from Theorem 11 and Theorem
13. <

5.3 Near-optimality with respect to general value-stability functions

We now show that capped inverse proportional allocation can perform near-optimally for
any “reasonable” value stability constraint f : [1,co] > [0,1]. First, we argue that any
“reasonable” value-stability constraint f should at minimum satisfy the following conditions:
(a) f is weakly increasing, and (b) f(x)/In(x) is weakly decreasing.

For constraint (a), observe that if a prior-free allocation algorithm is value-stable with
respect to f, then it is also value-stable with respect to g(x) = miny>2 g(y) which is weakly
increasing.

S. Chawla and M. Jagadeesan 42:17

We now prove Theorem 12.

Proof of Theorem 12. Let x be any value in [1,00]. We consider the value vectors v =

 

 

 

[x,...,2] and v’ = [a?,1,...,1]. Notice that max;ej) (max (3, “) =a. Observe that

allocation a! is _ a(2?) ge?) a, ia hewornes

the allocation a is 1 — (k 1) sente=Da 1 Toy" As k + o, this becomes
= ‘

1- wen — 1-27? In comparison, the allocation a; > 0. Thus, we must have that

f(x) >1-a7-*%, <

Bi Near-optimality of Inverse Proportional Allocation

In this section, we prove that inverse proportional allocation is near-optimal in comparison
to any prior-free allocation algorithm. First, we show in Section 5.1 that IPA is optimal
for the family of value-stability constraints f¢: that is, no prior-free allocation algorithm
can beat the performance of IPA within this family of value-stability constraints. Then, we
consider the performance of IPA for value-stability constraints f that are not of the form
fe. We construct an extension of IPA called capped IPA that performs near-optimally for
any “reasonable” function f satisfying a mild constraint. In Section 5.2, we discuss this
extension of IPA, and in Section 5.3, we prove our near-optimality result: for any function
f satisfying the constraint that admits a prior-free value-stable allocation algorithm with
approximation ratio a, there exists a capped IPA algorithm that achieves an approximation
ratio of napa):

5.1 Optimality of IPA

Recall that Theorems 11 and 13 together imply that for any ¢ > 0, it is possible to achieve
value stability with respect to the function f while obtaining an ag = 1 — ¢°/(€+ 1)!
approximation to social welfare. We will now show that no prior-free allocation algorithm
that is value stable with respect to f¢ can obtain a better approximation as the number of
advertisers k tends to infinity.

> Theorem 16. For every £ > 0, no prior-free allocation algorithm that is value stable with
respect to fe can obtain a worst case approximation ratio for social welfare over k advertisers
that is better than ag — 1/k.

Thus, within the family f, the approximation ratio obtained by IPA is optimal within an
additive factor of 1/k. In the limit as k — oo, this theorem implies that IPA achieves the
optimal approximation ratio in comparison to any prior-free allocation algorithm that is
value-stable for fe.

The proof of this theorem is based on the following lemma from [7] that we restate and
reprove for completeness.

> Lemma 17 ([7], rephrased). Let f : [1,00] — [0,1] be any weakly increasing function, and
A> 1 be an arbitrary real number. Then, no prior free allocation algorithm over k advertisers
that is value-stable with respect to f can obtain an approximation to social welfare better

than: (4 + fA) +A? (1- ¢- FA))-

Proof. Consider the value vectors v = [1,...,1]. Since the total allocation is 1, there must
exist an advertiser i € [k] such that a; < 1/k. We define a value vector v’ that’s within a
multiplicative factor of A on every coordinate and place a lower bound on its approximation
ratio for social welfare. More specifically, we consider v’ so vj = \ and vj = AN} for j Fi.

42:10 Individual Fairness in Advertising Auctions Through Inverse Proportionality

™ Algorithm 1 Inverse Proportional Allocation (IPA) parameterized by function g.

 

Input: Function g : R2° > (0, 00] with g(0) = 00 and lim, _,. g(x) = 0. Values v1,..., Up.
Initialize a; = 0 forl<i<k
Sort the values so that vy < vg <... < up.
if vu, = 0 then
Set a; = 1/k for all 1 <i<k.
return a.
end if
Initialize s = min ({i € [k] | v; > O}).
while (k — s)g(vs) > i g(v;) do
Increment s.

end while
for i>sdo
Set a; =1—(k—s) qf.
eas is -B) soe)
end for
return a.

 

> Lemma 9. For any value vector v and any i € [k], let v’ = (v;',v_;) be another value
vector that differs from v only in coordinate i with v; > v;'. Then it holds that a;(v) > a;(v’)
and a;(v) < a;(v’) for all j Zi.

Proof. Consider determining the allocations a(v) and a(v’) using Formulation 1 of the IPA
described above. Let y(t) and y'(t) denote the sums of allocations at a particular value of t
for v and v’ respectively. Recall that g is a decreasing function, and so, g(v;) < g(v;’). Then,
at any t, we have y(t) > y’(t). Therefore, the value of t* that defines the final allocations is
smaller under v than under v’. This immediately implies a;(v) < a;(v’) for all 7 4 i. Then
a;(v) > a;(v’) follows by recalling that the allocations sum up to 1. <

Lemma 9, by guaranteeing monotonicity, implies that the algorithm can be implemented
as an incentive-compatible mechanism using an appropriately designed payment rule. For
g(x) = 1/x, the payments can be specified explicitly; see the full version of the paper.

3.2. Choosing the function g

An important choice in the design space for IPA algorithms is the choice of the function
g. This choice depends on the tradeoff between the stability condition we want to satisfy
and the social welfare approximation we desire. However, there is an additional property
that should be satisfied. Since we focus on prior free design and worst case analysis, the
algorithm should be scale free in that when all values are scaled by a common factor, the
allocation remains the same.

Consider, for example, the value vectors v = (1,2) and v’ = (y, xy). The allocation
produced by IPA with parameter g in the two cases is, respectively,

_(,_ 90) _ 92) and a = (1-9) _ __ g(xy)
a= (1 a) + 9(@)" a) ‘ (1 au) + 9a)" Tera)

In order for these allocations to be the same, modulo normalization, it must hold that
g(xy) = g(x)g(y) for all x,y > 0. Under very mild assumptions on g (e.g. continuity), the
only solution to this functional equation is g(a) = x~* where ¢ € (0,00). Henceforth we focus
on IPA parameterized by this family of polynomial functions.

S. Chawla and M. Jagadeesan 42:13

 

1.0

og

0.6

04

02

Value-stability requirement f(A)
Allocation difference (90th percentile)

 

 

 

 

 

 

 

 

    

 

 

 

 

 

 

0.0
10 12 1a 16 18 20 10 12 14 16 ve
parameter i Ratio between bids
(a) Theoretical analysis: value-stability (b) Empirical analysis: Bid stability profile
conditions fe. of IPA.
1.0 0.98
0.96
208 2
& Z © 0.04
Sos] 5
£ af £082
3 ie 3 “y ee -x- PAfor k=2
B04) FY === PAfor k=2 2 0.90 a -o- IPAfork=2
< ge =-- PAfor k=3 < es -%- PAfor k=3
0.2 f° =-- PAfork=5 0.88 f -S IPAfork=3
=== PAfor k=6 Pa -*- PAfor k=5,
=-- PAfor k=10 0.864 —s IPAfork=5
0.0
0.0 05 10 15 20 25 05 10 15 20 25
parameter £ of the value-stability constraint Parameter £ of the bid stability constraint
(c) Theoretical analysis: approx ratio (d) Empirical analysis: approx ratio
of IPA(é), PA(2é). of IPA(¢), PA( 32).

™ Figure 1 Properties of IPA across different settings of £. The vertical axes are different in the
first row and the second row. Refer to the full version for a discussion of the empirical analysis on
the Yahoo dataset. (Bid-stability in the empirical analysis is closely related to value-stability in the
theoretical analysis.)

{4 An analysis of Inverse Proportional Allocation
We will now prove the value stability of Inverse Proportional Allocation, restated below.

> Theorem 11. For any ¢ > 0 and any number k > 0 of advertisers, the inverse proportional
allocation algorithm with parameter € is value stable with respect to any function f that
satisfies f(A) > fe(A) =1— A" for all  € [1, 00).

> Theorem 12. For any function f and parameter € > 0 such that over any number of
advertisers k > 0, the IPA with parameter ¢ is value stable with respect to f, it holds that
f(x) > fe(x) for alla >1.

To prove Theorem 11, we need to understand how the allocation changes as the value
vector changes by a small multiplicative amount. There are two main components to this
analysis. First, given a value vector v, we identify among all value vectors multiplicatively
close to v the one that changes a particular advertiser 7’s allocation to the greatest extent. The
second step is to then bound the corresponding change to the allocation. The main challenge
in doing so is that as the value vector changes, the set of advertisers that get non-zero
allocation also changes. This makes it difficult to directly compare the two allocations.

42:8

Individual Fairness in Advertising Auctions Through Inverse Proportionality

(3) in the context of fair ad allocation, parts of the prior may be sensitive information
that is inappropriate or illegal to use; and, most importantly, (4) we would like to ensure
fairness guarantees even if the prior is misspecified, or if new value vectors arise that were
not expected to be in the support.

Social welfare. In this work we focus on the objective of social welfare maximization. The
social welfare achieved by the allocation vector a on value vector v is given by a: v. The
maximum social welfare achievable for any value vector v is therefore max; v;. As discussed

 

previously, welfare maximizing allocation functions generally do not satisfy value stability,
so we look towards approximation. In keeping with the prior-free design of the allocation
function, we measure its performance in the worst case.

> Definition 4. An allocation function a achieves an a-approximation to social welfare for
a <1 if for all value vectors v we have a(v)-v > a: max; vj.

2.1 Fairness and value stability

We now discuss how fairness connects to value stability. [7] introduces a model for ad
allocation where users are drawn from a universe U endowed with a distance metric d that
captures similarities between different users: the shorter the distance between two users, the
more similar they are to each other. The model employs the notion of individual fairness from
[10] which requires, informally, that similar users should receive similar outcomes. When
the outcomes are probability distributions, Dwork and Ilvento [11] propose using the
distance between difference distributions as a measure of (dis-)similarity in outcomes.

> Definition 5 (Paraphrased from [10] and [11]). A function A:U — O assigning users to
outcomes from a set O is said to be individually fair with respect to distance metrics d
over U and D over O, if for all ui,u2 € U we have D(A(u1), A(uz)) < d(ur, ua).

An allocation function a: U + A({k]) satisfies multiple-task fairness with respect to
distance metric d if for all uy,ug € U andi € {k], we have |a;(ui) — a;(ua)| < d(ur, ug).

Like in this work, [7] studies the design of allocation algorithms that return fair outcomes

when the advertisers bid fairly. [7] connects fairness in advertisers’ values and allocations to

 

the distance metric over users through a constraint on advertisers’ values called the “bid
ratio constraint”. Informally, if two users are close to each other under the distance metric d,
then all advertisers are required to bid multiplicatively similar amounts on the users.

> Definition 6 ([7]). A bid ratio constraint is a continuous function h : [0,1] + [1, co]
with h(0) = 1 and h(1) = 00. We say that the value function v' : U — (0,00) of advertiser i
satisfies the bid ratio constraint h with respect to metric d if for all uy,ug € U: CICSECTD) <

wai) h(d(ur, ua))-

vi(u2) =

 

[7] then proceed to design allocation algorithms that achieve multiple task fairness with
respect to the underlying metric d as long as the values reported to the algorithm satisfy an
appropriate bid ratio constraint. There is a close connection between our approach and that
of [7]. An allocation algorithm is value stable if and only if it satisfies multiple task fairness
whenever paired with value vectors satisfying an appropriate bid ratio constraint.

> Fact 7. Leth: [0,1] > [1, co] be a strictly increasing function with h(0) = 1 and h(1) = co.
Let f : [1,00] — [0,1] be the inverse of h. Then an allocation function a is value stable with
respect to function f if and only if over any universe U endowed with distance metric d and

S. Chawla and M. Jagadeesan 42:3

1.1. Our contributions

In this paper we propose a new framework for expressing fairness in ad auctions as a value-
stability condition. We then design allocation algorithms that achieve near-optimal tradeoffs
between value-stability and social welfare.

Fairness as a stability condition. Consider, again, two users Alice and Bob. Let v
denote the values received by Alice and v’ the values received by Bob. We will use a
parameter \ > 1 to quantify the similarity between Alice and Bob, and will say that they
receive non-discriminatory values if it holds that v;’ € [$v;, Avi] for all ¢ € [k]. Given such
non-discriminatory values, we will require that Alice and Bob receive allocations that are

 

component-wise close to each other, i.e. a;(v’) € a;(v) + f(A) for all i € [k].° Here f is
an externally specified function that we call the fairness constraint and that governs the
strength of the fairness guarantee. We say that the auction is value stable with respect to
the constraint f.

We essentially require the allocation function to satisfy a kind of stability condition:
when it receives two value vectors that are component-wise close, it should return allocations
that are component-wise close. Observe that we measure closeness in values as a ratio, and
consequently our stability notion is scale free. On the other hand, we measure closeness in
allocations as a difference, specifically the 0, distance between the respective distributions.
This corresponds to the notion of multiple-task fairness defined by Dwork and Ilvento [11] in
the context of multi-dimensional allocation algorithms.

Our approach of expressing fairness as a stability constraint offers several benefits. First,
our approach assumes that every pair of similar users receives multiplicatively similar values
from all advertisers. This enables a clear separation of responsibility between the auctioneer
and the advertisers, which can simplify the design of both of these components of the ad
auction pipeline. We envision that an auditor would check whether advertisers are following
fairness guidelines. As a result, the auctioneer only needs to ensure that the allocation is fair
when the advertisers’ reported values are fair, but is required to provide no fairness guarantee
when the values themselves are unfair. Second, and more importantly, the auctioneer can
provide this guarantee without access to the specifics of fairness requirements across users.
One criticism of the notion of individual fairness is its reliance on an appropriate similarity
metric on users that captures exactly what features can be used to differentiate between users.
This metric can not only be challenging to learn, but may itself be sensitive information that
is unavailable to the auctioneer or illegal to use directly. Our approach allows the auctioneer
to provide a meaningful fairness guarantee without knowing or using the similarity metric.
In effect, the metric is encoded in the advertisers’ reported values when those values are fair.

Finally, we note that in [7], we considered a similar model of fairness in ad auctions but
formalized the fairness constraint in a slightly different manner. The algorithmic results in
this paper are directly comparable to those in [7], and we make the connection explicit in
Section 2.1.

Designing value-stable allocation algorithms. Now that we have defined value-stability,
our goal can be restated as designing value stable auctions that achieve high social welfare.

In [7], we proposed a natural candidate for value stability, namely Proportional Allocation
(PA) algorithm: given the value vector v, we assign each ad i to the user with probability
vi/ > Ua It is straightforward to observe that changing each value by a factor of A changes

3 We emphasize that we do not require that two ads with similar values for the same user be served with

similar probabilities: we aim to satisfy fairness across users, not across advertisers.

S. Chawla and M. Jagadeesan 42:9

any set of value vectors assigned to users in the universe that satisfy the bid ratio constraint
h, the function a applied to the value vectors produces a multiple task fair allocation with
respect to d.

{3) The Inverse Proportional Allocation algorithm and our results

The main contribution of this paper is a new class of allocation functions that we call
inverse-proportional (IPA) allocation. In this section we introduce the algorithm and outline
its properties. Let us begin with an informal description of our mechanism. Recall that in
a proportional allocation algorithm, the allocations a; are proportional to (some function
of) the values v;. In the inverse proportional allocation algorithm, we set the unallocated
amounts 1 — a; to be proportional to some decreasing function of the values v;. Specifically,
the algorithm is parameterized by a decreasing function g : R2° > (0, 00], where g(0) = co
and limy-.00 g(x) = 0. We then deduct allocation from advertiser i in proportion to g(v;).

We will now describe the algorithm more precisely in three different but equivalent ways,
which will be useful for our analysis.

Formulation 1: We start with the most direct formulation. Let v be a value vector. For
t 2 0 and i € [k], let yi(t) = max(0,1 — tg(vi)), and y(t) = Do jciy yi(t). Observe that
y(t) is a decreasing function with y(0) =k. Then, there is a unique value of t for which
y(t) = 1. Let t* > 0 be this value. Define a(v) = (y1(t*),--- ,ye(t*)). (Intuitively, we
start with an allocation of 1 to every advertiser, corresponding to t = 0. We gradually
raise t, decreasing the allocations in proportion to g(v;). When an allocation reaches 0, it
remains 0. The process stops when the total allocated mass is precisely equal to 1.)

Formulation 2: We next describe an algorithmic version that describes how to find t*. For
i € [k] let w; denote the unallocated amounts to be assigned to each advertiser. Observe
that over any set S of advertisers, the total allocated amount is at most 1 and therefore
the total unallocated amount is at least |S'| — 1. The w,’s split this amount in proportion
to the g(v;)’s. However, there is a problem: when the set S' is large and vu; is very small,
it may turn out to be the case that w; > 1, and 1 — w; is negative. In this case, we
must assign an allocation of 0 to the corresponding advertiser. Formally, we start with S

being the set of all advertisers. At each step we determine the weights w;(S) as below;

 

we remove from S$ any advertisers j with w,;(S') > 1; we recurse on the remaining set of

advertisers until all w;(S) values are < 1.

g(vi)
Vies g(vj)

Formulation 3: Our final formulation is a computationally efficient algorithm implementing
the above idea. See Algorithm 1. The algorithm runs in time O(k log k).

wi(S) = (|S

 

-1)

> Remark 8. In Algorithm 1, when k = 2, the condition for the while loop is never satisfied, so
both advertisers will receive nonzero allocations if both of their values are nonzero. Similarly,
whenever k > 2, at least two advertisers will be assigned nonzero allocation probabilities
when there are at least two advertisers with nonzero values.

3.1 Incentive Compatibility

Observe that IPA is a prior free algorithm. We will now formally prove incentive compatibility.
The following lemma shows that the allocation assigned to any advertiser is weakly monotone
increasing in her own value and weakly monotone decreasing in other advertisers’ values.

42:12

Individual Fairness in Advertising Auctions Through Inverse Proportionality

The approximation ratio of IPA is easy to analyze and we present the argument here
in its entirety. The proof essentially shows that value vectors of the form [1,2,x,...,2] for
x <1 are the worst case with respect to social welfare for IPA. At such a value vector, each
advertiser with value x gets some non-zero allocation, which limits the mass that is placed
on the highest value advertiser.

Proof of Theorem 13. Consider any value vector v and order the values so that vj > v2 >
... > Ug. Since multiplicative scaling does not affect the allocation or the approximation
ratio, we may assume without loss of generality that v1 = 1. Then, the optimal social welfare
over this value vector is also 1. We may also assume v2 > 0, since otherwise the algorithm
puts the entire allocation mass on the highest value.

Consider the set of non-zero allocations. We know that this set is of the form {1,...,m}
for some 1 <m<k. The social welfare achieved by IPA can be written as:

m

1 Via; > VA, + Um(1 — a1) = a1 + Um(1 — a1).

i=1

To analyze this expression, we first recall that ay = 1—(m-—1)/7", v;—*. Observe that
since advertiser m receives a nonzero allocation, we know that

-t
Um

This means that a, > 1 — Um!, and the approximation ratio can be lower bounded by
1 Um! + Um’? an
bound claimed in the theorem. <

1>1-a, =(m-—1)

. The lowest value of this expression is achieved at Um = implying the

Observe that the approximation achieved by IPA is independent of the number k of
advertisers. This is one of the main features that distinguishes IPA from the family of
proportional allocation (PA) algorithms. PA necessarily exhibit worse and worse performance
as the number of advertisers grows because every advertiser gets some non-zero fraction of
the total allocation; IPA, on the hand, achieves good performance even when k is large by
better handling advertisers that have small values relative to the largest value.

Figure 1 shows our bound from Theorem 13 for IPA as well as the bounds in Chawla et
al. [7] for PA. Notice that when k > 6, IPA consistently outperforms PA across most of the
parameter regime for ¢. Moreover, the gap between these bounds grows as k becomes larger,
eventually reaching oo as k > oo. When k = 2, however, the bound for PA beats the bound
for IPA. This turns out to be an artifact of our theoretical analysis.®

Finally, we remark that IPA with parameter ¢ = 1 arises as a full-information Nash
equilibrium of an algorithm that allocates proportionally to bids with an all-pay payment
tule. These mechanisms are considered in [14, 5, 8], and, in this context, the approximation
ratio was previously shown to be at least 3/4, the same bound we obtain. Our analysis is

different and much simpler than those other works beca in particular, it does not require

  

determining equilibrium strategies. Moreover, our analysis generalizes to ¢ 1.

5 For k = 2, the proof of Theorem 11 actually shows that the fairness guarantees of IPA turn out to
be stronger, and indeed IPA with parameter ¢ is bid stable with respect to fy/2. Thus, it is more
appropriate to compare IPA with parameter ¢ and PA with ¢, and the bound in Theorem 13 can be
improved to show that these two algorithms achieve the same approximation ratio.

S. Chawla and M. Jagadeesan 42:15

Lemmas 14 and 15 along with Lemma 9 provide us with the necessary ingredients to
prove Theorem 11.

Proof of Theorem 11. Let  € [1, 00), and let v be an arbitrary value vector. We will focus
on the allocation a; to advertiser 1, and consider a value vector v’ with vj € [1/A, AJu; for
all i € [k] that assigns the minimum possible allocation to 1. Since the IPA is a scale-free
allocation algorithm, we may equivalently focus on value vectors v’ with vj € [1/\?, 1]u; for
all i € [k]. Lemma 9 then implies that the allocation to 1 is minimized at vj, = v1 /A? and
wf 4, SUL.

Let S be the set of advertisers receiving nonzero allocation from IPA on v, and let $’ be
the corresponding set for v’. Let a and a’ be the corresponding allocations. By Lemma 9,
al, > a; for alli A 1 and a < ay. Therefore, S C S’U{1}. We want to show: a, — ai, < fe(A).
We now break up our analysis into three cases.

Case 1: 1 g S. In this case, a; = 0 and a; — a), < 0, so the statement trivially holds.
Case 2: 1 € S and 1 € S’. In this case we have S C $”, and aj, a > 0. So, by Lemma 14
we obtain:

 

Gy = 1 tbl “Riss ee £1-(s'l-Dss ey
GES J jes! J

Furthermore, Lemma 15 implies:

1-(\s

 

 

g(vr) 1 g(v1) , !
1) *__ < max | 0,1 — (|S’] — 1) [= 4 — } + fe(d) = a + fe),
Ves (vs) ( Viyes 9%) '
so ay — a, < fe(A) as desired.
Case 3: 1 € S and 1 ¢ S’. In this case we cannot directly apply Lemma 15 to $’. Instead,
let R= {i| vf > vj} = {i |v; > vy /r?}. We claim that S C R. This is because 1 ¢ S’,
and therefore all i € S" have vj > v{, and therefore S$ C S’U {1} C R.

Thus, we can apply Lemma 14 to obtain:

 

aa 1~ (SI ~ DAS S1 (RD.

Next, we can apply Lemma 15 to R to see that

 

—(R)—-)— 2) < max {0,1 — (VR) 1) — 92
1 (RI Deng) ~ (1 RI Dg Ohl) +10

Finally, since advertiser 1 receives a zero allocation on value vector v’ and since vj =
i € R}), we know by Step 7 of Algorithm 1 that (|R| — 1)g(v{) > Dyer g(%)-

Thus, 1 — (|R| — De <0. This shows that a, < fe(A) = a, + fe(A) as desired. <<
GER IMG

It remains to prove the lemmas.

 

min ({v/

/

Proof of Lemma 14. For i € [ml], let a; = 1 — (m—- Ye ta and aj = 1— (m! —

(1/23)
J€lm]
1) a We wish to prove that for i € [m], it holds that a; < aj. In order to compare
jElm’) 7

these values, we consider the following expressions for a; and a using Formulation 1 of
IPA in Section 3. First, we see that aj; = max(0,1—t- (1/v;)), where t is the unique value
such that ye a; = 1. Equivalently, since [m’] contains the set of advertisers that receive

S. Chawla and M. Jagadeesan 42:7

2) Ad Auctions and Value Stability

We use a simple stylized model for ad auctions. Every time a user arrives on the platform, k
advertisers bid for the chance to display their ad in the single ad slot available. We assume that
the platform employs a truthful direct auction to determine which ad to display. In particular,
when the user arrives, each advertiser i reports a value v; for the user. The auction takes the
value vector v = [vi,--+ , vg] as input and returns a distribution a(v) = [a1(v),--- ,ax(v)]
over the advertisers. We drop the argument v when it is clear from the context. With
probability a;, advertiser i is picked and the corresponding ad is displayed for the user. We
call the function a(v) the allocation function.

An allocation function a is truthful if there exists an accompanying payment function
p(v) that incentivizes advertisers to bid their true values. Such a payment function exists if
and only if for all i, a;(v;,v_;) is a monotone non-decreasing function of the argument v;;
payments can be computed using the standard payment identity. Henceforth we focus on
weakly monotone allocation functions. We briefly discuss the computation of payments using
the payment identity in the full version of the paper.

Value stability. In order to prevent the allocation function from introducing unfairness into
the system, we require that our allocation is value-stable. If two users have similar values
from all advertisers, then they must receive similar allocations. That is, we require that
for two value vectors v and v’ that are component-wise close in a multiplicative sense, the
allocations a(v) and a(v’) must be close in an additive sense. Formally:

> Definition 3. An allocation is value-stable with respect to function f : [1,00] > [0,1] if
the following condition is satisfied for every pair of value vectors v and v':

t
jai(v) — ai(v’)| < f(A) for alli € [k], where X is defined as max (max{ 3, wt) .
i€[k] vy!) Uy
The function f governs the strength of the value stability constraint. When two value vectors
are identical, the allocation should be the same, so f(1) = 0. When two value vectors
are arbitrarily different, the allocation should be permitted to be arbitrarily different, so
f (oo) = 1. For intermediate values, observe that the smaller f is, the tighter is the constraint
on the allocation, and the harder it should be for the auction to achieve value stability.
Following [7], we characterize the strength of the fairness constraint on values by considering

an explicit family F of functions parameterized by ¢ € (0,00): fe(x) = 1— «774.6

Simplicity through prior-free design. Observe that our notion of value stability is defined
over all possible pairs of value vectors v and v’, and not just those that arise in a real-world
context. This is intentional: as discussed in the introduction, we require the allocation
algorithm to be prior-free in the sense of not knowing or even assuming a prior over value
vectors. While utilizing a prior can potentially improve the algorithm’s performance, there
are several reasons for preferring a prior-free design: (1) prior-free algorithms are generally

 

simpler than prior-dependent ones; (2) a single prior-free algorithm can be used in multiple
different contexts without modification, and is therefore robust to changes in the market;

© The precise form of the value-stability in [7] is actually — 7

other within small constant factors, and the form we use is mathematically more convenient for our
proofs.

 

The two functions are related to each

Individual Fairness in Advertising Auctions
Through Inverse Proportionality

Shuchi Chawla &
The University of Texas at Austin, TX, USA

Meena Jagadeesan &
University of California, Berkeley, CA, USA

—— Abstract

 

Recent empirical work demonstrates that online advertisement can exhibit bias in the delivery of
ads across users even when all advertisers bid in a non-discriminatory manner. We study the design
ad auctions that, given fair bids, are guaranteed to produce fair outcomes. Following the works of
Dwork and Ilvento [11] and Chawla et al. [7], our goal is to design a truthful auction that satisfies
“individual fairness” in its outcomes: informally speaking, users that are similar to each other should
obtain similar allocations of ads. Within this framework we quantify the tradeoff between social
welfare maximization and fairness.

This work makes two conceptual contributions. First, we express the fairness constraint as a
kind of stability condition: any two users that are assigned multiplicatively similar values by all
the advertisers must receive additively similar allocations for each advertiser. This value stability
constraint is expressed as a function that maps the multiplicative distance between value vectors to
the maximum allowable ¢,. distance between the corresponding allocations. Standard auctions do
not satisfy this kind of value stability.

Second, we introduce a new class of allocation algorithms called Inverse Proportional Allocation
that achieve a near optimal tradeoff between fairness and social welfare for a broad and expressive
class of value stability conditions. These allocation algorithms are truthful and prior-free, and
achieve a constant factor approximation to the optimal (unconstrained) social welfare. In particular,
the approximation ratio is independent of the number of advertisers in the system. In this respect,
these allocation algorithms greatly surpass the guarantees achieved in previous work. We also extend
our results to broader notions of fairness that we call subset fairness.

2012 ACM Subject Classification Theory of computation —> Algorithmic mechanism design
Keywords and phrases Algorithmic fairness, advertising auctions

Digital Object Identifier 10.4230/LIPIcs.ITCS.2022.42

Related Version Full Version: https: //arxiv.org/abs/2003. 13966

Funding Shuchi Chawla: Supported in part by NSF awards CCF-2008006 and SHF-1704117.
Meena Jagadeesan: Supported by a Paul and Daisy Soros Fellowship.

i | Introduction

Algorithms play an increasingly important role in today’s society and can arguably have
far-ranging social, economic, and political ramifications in many different contexts. One
such context is access to sponsored information such as advertisements on social media,
search pages, and other websites. It has been well documented that online advertisement
can exhibit skewed delivery: users that differ on sensitive attributes such as race, gender,
age, religion, and national origin can receive very different allocations of ads (see, e.g.,
[20, 9, 2, 3, 17, 16, 1]). For example, certain employment jobs on Facebook have been found
to exclusively target men or exclude older people; and housing ads have been found to exclude
users based on race [3, 2, 16].
© Shuchi Chawla and Meena Jagadeesan;

fmm licensed under Creative Commons License CC-BY 4.0
13th Innovations in Theoretical Computer Science Conference (ITCS 2022).
Editor: Mark Braverman; Article No. 42; pp. 42:1-42:21

wy Leibniz International Proceedings in Informatics
LIPICS Schloss Dagstuhl — Leibniz-Zentrum fiir Informatik, Dagstuhl Publishing, Germany

42:2

Individual Fairness in Advertising Auctions Through Inverse Proportionality

There are two main sources of unfairness in digital ads. The first is explicit or implicit
targeting of users based on sensitive attributes by the advertisers. This source of unfairness
can be mitigated by examining and auditing each advertiser’s targeting approach separately.!
The second, more subtle and insidious, source of unfairness is the ad delivery mechanism that
determines for each user which ad to display based on advertisers’ bids, budgets, relevance of
the ads to the user, etc. Recent empirical studies [17, 1] have observed that even when each
advertiser’s targeting parameters are inclusive, skewed delivery can arise as a result of the ad
auction mechanism. Our paper focuses on eliminating this second source of unfairness.

We study the design of ad auctions from the perspective of individual fairness.
Individual fairness [10] posits that similar users should be treated similarly. In the context of
sponsored content, this translates into requiring that similar users should be served a similar
mix of ads. We follow the approach of Chawla et al. [7] and isolate the effect of auction
design on fairness in outcomes by assuming that each advertiser’s bids are non-discriminatory.
Then, if two users receive similar bids from all advertisers, we require that they receive
similar ad allocations. In other words, the auction does not introduce any further unfairness

 

than what may be present already in advertisers’ bids.

We consider a stylized model of (truthful) ad auctions where users arrive over time and
each is shown a single ad. When a user arrives, k advertisers report their values for the
single ad slot; denote these values with the vector v = (v1,v2,--- ,vx).2 The auction selects
a (potentially random) advertiser based on the values and displays its ad; we denote the
auction’s selection by a distribution over [k], a(v) € A({k]), where a;(v) is the probability
that advertiser i’s bid is displayed. We measure the quality of this allocation in terms of
its social welfare — the expected sum of values corresponding to ads displayed, with the
contribution of each user to this sum given by v- a(v) = Viela] vja;(v).

Social welfare maximization for our simple model in the absence of a fairness constraint
is easy: just serve each user the ad with the highest value. Real-world ad auctions are
essentially variants of this “highest-bid-wins” auction, modified to accommodate click-through-
rates, multiple slots, etc. Our main challenge is that these standard auction formats are
fundamentally incompatible with fairness. Consider, for example, two job ads A and B
competing over two users Alice and Bob. Suppose that Alice and Bob have similar educational
qualifications and work experience but belong to different ethnic groups. Further, due to
slight differences in their profiles, suppose that A values Alice slightly higher than B and
B values Bob slightly higher than A. Then a highest-bid-wins auction would allocate ad A
to Alice and ad B to Bob. This violates our fairness constraint: although the two users are
similar to each other in most respects, their ad allocations are completely different. Indeed,
if job B is much more desirable than job A, then Alice is discriminated against. Note that
the unfairness persists even if each advertiser individually places similar values on the two
users. As we show in experiments in the full version of the paper, this behavior is not just
hypothetical but is frequently observed in real data as well. The highest-bid-wins auction
greatly exaggerates minor, subtle differences in input into huge swings in output.

Indeed, in response to a lawsuit brought on by the U.S. Department of Housing and Urban Development
and ProPublica against Facebook on discrimination in housing ads, Facebook’s first action was to
disallow advertisers to target users based on sensitive attributes [16]. However, despite this action,
unfairness in outcomes continued to persist [1].

We focus in this work on truthful auctions, and so do not make a distinction between bids and values.
All of the allocation rules we propose and study are monotone in values and can be implemented in a
truthful manner.

42:14

Individual Fairness in Advertising Auctions Through Inverse Proportionality

Before jumping into the main proof, let us consider the special case of k = 2 advertisers.
This setting will illustrate the first component of our analysis as well as provide intuition for
how the stability constraint f¢ relates to the parameter setting of IPA. In this setting, both
advertisers always receive non-zero allocation and it becomes possible to write the allocation
explicitly:

 

 

1 id 1 vg _ uy! vot
a(v) - vy! + 97’ - v7! —| [oe vr! + v2

Now fix a value A € [1, 00) and consider any two value vectors v and v’ with v{, € [1/A, AJui
and v% € [1/A, A]v2. We need to show that |a; — a| < fe(A) = 1—\~?", which implies the
same bound over |az — a4|. Let us fix the vector v and construct a worst-case value vector
v’ such that a{, is as small as possible while respecting the multiplicative condition on the
values. The monotonicity properties given in Lemma 9 enable us to identify such a value
vector: v’ = [v,/A, Ava]. For this “worst-case” choice, we have:

uf (v})
ae CC

1 1

Treating v2/v1 as a free variable, we see that the expression is maximized at v2/v1 = 1/A
and we get,

a, —a,=

, 1 1 = 1 4
OS toy Tee war te
Recall that f¢(A) = 1—A~?4 and so the theorem follows for the case of k = 2.

For the general case, we carry out a similar analysis. We fix the value vector v and a
parameter A € [1,00), and find a worst-case value vector v’ that is multiplicatively close
to v but changes the allocation by the greatest amount. The challenge is that in order to
write down an explicit expression for some advertiser’s allocation we need to fix the set of
advertisers that obtains non-zero allocation. This set changes as the value vector changes.

Our analysis is based on two ideas. The first idea is to examine the formulation of IPA in
Algorithm 1 and consider how the allocations change if we terminate the while loop in Step 7
early. Let S be the set of agents that receive non-zero allocations in the algorithm. We
argue that if we terminate the while loop early, “serving” a larger set of agents than S, then
agents in S receive higher allocations. The second idea is when comparing allocations for
the two vectors v and v’, if we pretend that the same set of advertisers are “served” under
both the value vectors (with some of these allocations potentially being negative), then these
allocations are additively close. We formalize these properties in the following lemmas.

> Lemma 14. Let v be any value vector with the advertisers reordered so that v1 > v2 >
+++ > up. Let S = [ml] be the set of advertisers with nonzero allocation returned by the Inverse
Proportional Allocation algorithm parameterized by function g on v. Then for any m’ with
m<m' <k and anyi € [m),

gi) ' g(vi)
1-—(m-1) <1-(m'-1) :
ye jE[m] 9(v;) Viet g(v;)
> Lemma 15. Let \ € [1,00) and g(x) = x~* for all x > 0. Let S C [k] be an arbitrary

set of advertisers, andi be an advertiser in S. Suppose that value vectors v and v' satisfy
vi = v;/d? and vi =v, for all j € S with j Ai. Then we have:

max (0.1-(s1-n gs) — max (01-« gf) < fe(A).
JES J JES J

 

S

 

 

42:4

Individual Fairness in Advertising Auctions Through Inverse Proportionality

each allocation multiplicatively by at most \?. In fact, PA actually achieves the additive
form of fairness defined above with f(A) = (A—1)/(A+1).4 Unfortunately, the social welfare
of PA degrades as the number of advertisers increases. Suppose, for example, that there are
k +1 advertisers; the first one places a value of 1 on the user whereas all the others value
the user at x < 1. Then, PA assigns the first ad to the user with probability 1/(1 + xk) and
obtains a social welfare of (1 + 2?k)/(1+ ak). When x = 1/Vk, this is a factor of Vk off
from the optimal social welfare of 1. Other proportional allocation algorithms that assign
allocations in proportion to other functions of values® suffer from the same problem: their
worst case approximation ratio goes to zero as the number k of advertisers goes to infinity.
Is it possible to obtain better social welfare while maintaining fairness?

In this paper we introduce a new family of allocation rules that we call Inverse Propor-
tional Allocation (IPA). Informally, our auction begins by allocating each ad fully (but
infeasibly) to the user. It then “takes away” the over-assignment from the ads in proportion
to some decreasing function of the advertisers’ values until a total allocation probability
of 1 is achieved. The choice of the decreasing function depends on the strength of the
desired fairness constraint. This new family of mechanisms achieves fairness guarantees
similar to those of PA, while obtaining a constant factor approximation to the unfair optimal
social welfare, independent of the number of advertisers k. We show, in fact, that Inverse
Proportional Allocation achieves a near-optimal tradeoff between fairness and social welfare
for any stability constraint satisfying a mild assumption.

We describe the fairness guarantee of our algorithm in the form of a “fairness constraint”
f that specifies how different the allocations for two users can be as a function of the
similarity between the users. We use a parameter £ € (0,00) to denote the strength of
this fairness constraint: the smaller that @ is, the stronger is the fairness guarantee. ¢ = 0
corresponds to perfect fairness or the function that is 0 at all distances: all users receive
identical allocations; and £ = oo corresponds to unconstrained allocations or the function
that is 1 at all distances: users can receive arbitrary allocations. For intermediate ¢, we
consider a polynomial family fe of fairness constraints that best captures the fairness profile
of IPA (parameterized appropriately).

> Theorem 1 (Informal). For any £ € (0,00), Inverse Proportional Allocation with parameter
£ is value stable with respect to fy(X) = 1—A~2°. Its worst case approximation ratio for social
welfare, ap, is 3/4 at £=1 and approaches 1 as ¢ + oo. No prior free allocation algorithm
that is value stable with respect to f¢ can achieve a better approximation ratio than a, + 1/k.

When we further expand the class of allocation algorithms to include IPA mixed in with
the uniform allocation, we achieve near-optimality against a broad class of constraints f.

> Theorem 2 (Informal). Let f : [1,00] > [0,1] be any non-decreasing function such that
f(«)/log a is non-increasing. Suppose there exists an allocation algorithm that is value stable
with respect to f and achieves a worst case approximation factor of a. Then there is an
IPA algorithm that is value stable with respect to f and achieves a worst case approximation

factor of Q(a/(1 + log(1/a))).

Empirical evaluation. In addition to theoretical analysis, we perform experiments on
sponsored search auction data from Yahoo [21] to corroborate our theoretical bounds with
respect to both the social welfare and fairness. One practical challenge for our approach,

4 The strength of the fairness guarantee can be changed by allocating each ad with probability proportional
to an appropriate function of the corresponding value.
5 This class includes, for example, the exponential algorithm from differential privacy literature {18}.

S. Chawla and M. Jagadeesan 42:19

For constraint (b), observe that if a prior-free allocation algorithm is value-stable with
respect to f, then it is also value-stable with respect to g(x) = infnennf(a!/"). Then for any
x € [1,co] and n EN, it holds that g(x) -n =n- infmen mf(a!/™) > infmren m! f(ar/™) =
g(t) > gla")
in(e) = In@e*)*
that g(z)/In(x) is weakly decreasing.

 

 

g(a"). This implies that After some “smoothing”, this essentially guarantees
With these conditions in place, we consider value-stability constraints f where f is weakly
increasing and f(x)/1In(a) is weakly decreasing. We now show that for any f of this form,
the family of capped inverse proportional allocation algorithms achieves value-stability while
obtaining an approximation ratio that is only logarithmically worse than optimal.

> Theorem 20. Let f : [1,00] > [0,1] be any function where f(x)/In(x) is weakly decreasing
and f is weakly increasing. Suppose that there exists a prior-free allocation algorithm that
is value-stable for f that achieves a worst-case approximation ratio of a. Then, there exist
parameters & € (0,00) andc € [0,1] such that the capped IPA algorithm with parameters € and

c is value-stable for f and achieves a worst-case approximation ratio of at least: (smiann):

The proof of Theorem 20 leverages Lemma 17 to lower bound f(x) as a function of

the approximation ratio. This bound is applied to a carefully chosen point, and the basic
properties of f can be used to extend this to a pointwise lower bound by a “well-behaved”
function F’. This function F' can be approximated from below by a function of the form c- fe.
We then show that capped IPA with parameters @ and c achieves a significant fraction of the
optimal approximation ratio for the value-stability constaint f.
Proof of Theorem 20. Let c = nia = Thay and let F(x) = min(c,In(x) - ¢/In(1/a)).
We begin by showing that f(a) > F(x) for all x € [1,00]. By Lemma 17, we know that
f(x) > (a-27?)/(1- 27?) for every « € [1,0o). Now, we apply this fact at « = 1/a to
conclude that f(1/a) > S=% = c. Using the basic properties of f, we can extend this to
inte
we have that f(z) > n(x) -c/In(1/a) = F(x). Moreover, since f is weakly increasing, we
know that for x > 1/a, we have that f(z) > c = F(x). Putting these two conditions together,
we have that f(x) > min(c, n(x) -c/In(1/a)) = F(z).

Now, we relate F(x) to the value-stability condition for a capped IPA algorithm. By

 

 

obtain a pointwise lower bound by F’. Since is decreasing, this means that for x < 1/a,

Proposition 33 in the full version of the paper, we know that min(c, In(x) -c/In(1/a)) > c(1—
a—l/n(1/e)). This implies that f(x) > (1 — #7!/"C/%) as desired. Let ¢ = 1/(2In(1/a)).
We claim that the capped IPA with parameters ¢ and c is value-stable for f. By Corollary
19, we know that this capped IPA algorithm is value-stable for f(a) > c(1 — 2774) =
nas (1—a7'/"Q/4)) as desired.

Now, we show that this capped IPA algorithm achieves an approximation ratio of at least

 

(acts mea): By Corollary 19, we know that the algorithm achieves social welfare of at least

1 ef a-a? 1 a 1
e{l > 1- = .
4+1\641 1-a? +1 l+a \2In(1/a) +1

This completes the proof. <

 

Theorem 20 shows that capped IPA achieves an approximation ratio of at least s3q9>y7 mun

where a is the best possible approximation ratio achieved by any prior-free alienation
algorithm that is value-stable for f. In fact, this result also shows that when a > 0.5 (i.e. the
best possible approximation ratio achieves a 0.5 fraction of the social welfare), then capped
IPA achieves a approximation ratio of at least 0.2a. In other words, in this regime, capped

S. Chawla and M. Jagadeesan 42:5

which relies on values to infer similarity between users, is that not all advertisers bid on
all users: some advertisers may run out of budget, and some choose to bid on only a
subpopulation. Interpreting missing bids as zero values can cause the algorithm to form an
incorrect estimate of the similarity between two users, potentially violating fairness. For our
experiments, we define two users as similar as long as there is significant overlap between the
sets of advertisers that bid on both (in terms of Jaccard similarity) and the values of those
common advertisers are multiplicatively close.

Our main observations are twofold. On the one hand, the highest-bid-wins auction is far
from value stable, exhibiting widely varying allocations even for pairs of users with value
ratios very close to 1. On the other hand, IPA remains fair in the face of missing bids and,
as predicted by the theoretical bounds, the degree of value stability weakens as ¢ increases.

 

Relative to the optimal social welfare, IPA obtains approximation ratios of over 90% for a
large range of parameter values and up to 98% in some cases. IPA therefore offers a vast
improvement over highest-bid-wins in terms of fairness while suffering a minimal loss in
performance. We defer these empirical results to the full version of the paper.

Comparison between IPA and PA. While our primary focus is on comparing the IPA with
the highest-bid-wins auction, a.k.a. the unfair optimum, our results provide insight into
a comparison between IPA and PA as well. In order to obtain an accurate picture, it is
important to consider parameterizations of both algorithms that satisfy the same fairness
constraint. In our theoretical analysis, we use the fact that for any fixed ¢, the fairness
constraint fe is satisfied by IPAy and PAge. When we take a limit as k — 00, we show
that IPA, achieves a constant factor approximation for social welfare, while the worst case

social welfare of PAg approaches 0. Moreover, IPAy achieves a better worst-case social

 

welfare than PA as long as k > 6. In this sense, IPA greatly surpasses PA in terms of the
fairness/social-welfare tradeoffs.

In our empirical evaluation, we must consider the performance of these algorithms for
small constant values of k. This is tricky because the theoretical analyses of fairness for both
algorithms are loose for smaller values of k. To resolve this, we determine a parameterization

 

for PA by empirically matching its fairness profile with that of IPA, as closely as possible.
For the Yahoo dataset [21] that we use, a close match occurs between IPAy and PAs 4.
We then compare the performance of the two algorithms and find that IPA consistently
performs better on social welfare (with the exception of when the number of advertisers in
the auction is 2). In fact, as the number of advertisers increases, the performance of IPA
remains unchanged, while that of PA degrades rapidly. We conclude that in most settings,
IPA provides a better tradeoff between fairness and social welfare.

1.2. Further extensions

We also show our results can be extended to the following two settings.

Fairness across different categories of ads. So far in our discussion we have assumed that
there is a single notion of similarity across users that all advertisers are required to respect.
In reality, platforms often service many different categories of advertisers (for example job
advertisers and credit advertisers) that may be subject to different notions of similarity over
the users. These advertisers all compete against each other for the same users. Chawla et al.
[7] proposed fairness definitions for the multi-category setting that combine individual fairness
with envy-freeness. Our algorithms from this work can be utilized within the multi-category
framework in [7] to achieve significantly improved tradeoffs between fairness and social welfare
for the multi-category setting. We discuss this extension in the full version of the paper.

S. Chawla and M. Jagadeesan 42:11

> Definition 10. For ¢ € (0,00), the Inverse Proportional Allocation Algorithm with
parameter £ is Algorithm 1 with g defined as g(x) = x~ for x € [0, cx).

This family of polynomial functions encompasses the entire range of tradeoffs between
value stability and social welfare. To see this, consider IPA at the extremes. As ¢ > 0, IPA
with g(x) = x~° ignores the value vector entirely and always assigns an equal allocation
of 1/k to each advertiser. This algorithm achieves the strongest possible value stability
condition, with f(A) = 0 for all  € [1, co]. However, this value stability guarantees comes at
the expense of social welfare: the approximation ratio approaches 0) as k + oo. As f > co,
IPA with g(x) = a~° becomes a highest-bid-wins allocation rule. This algorithm achieves an
approximation ratio of 1 at the expense of value stability: f(A) approaches 1 for every A > 1.
When ¢ € (0,00), IPA with g(x) = x~ interpolates between these two extremes, achieving
different tradeoffs between social welfare and value-stability.

3.3. The value stability of IPA

We begin our analysis of the IPA by studying its value stability properties. The following
theorem shows that the IPA with an appropriate choice of parameter £ > 0 achieves value
stability with respect to the class of functions f¢(A) = 1 — \~.

> Theorem 11. For any ¢ > 0 and any number k > 0 of advertisers, the inverse proportional
allocation algorithm with parameter € is value stable with respect to any function f that
satisfies f(A) > fe(A) =1— A" for all  € [1, 00).

As briefly discussed above, the family of functions f¢ essentially represents the large
spectrum of possible value stability conditions. See Figure 1 for a depiction of fe at
different values of ¢. In particular, fo is 0 everywhere and represents one extreme ~— a fixed
allocation; fs. is 1 everywhere and represents the other extreme — an unconstrained allocation.
Furthermore, for any non-decreasing function f : [1,00) — [0,1] with limz_,.. f(x) = 1, there
exists an with f(x) > fe(a) for all x € [1,00). Therefore, for any such stability constraint
f, there exists a value for so that IPA with parameter @ is stable with respect to f.”

We also show a converse of Theorem 11. In particular, we observe that for stability
constraints f that do not fall into the class of functions { f;}, the best way to parameterize IPA
is to choose the parameter ¢ corresponding to the function f that most closely approximates
f from below.

> Theorem 12. For any function f and parameter € > 0 such that over any number of
advertisers k > 0, the IPA with parameter ¢ is value stable with respect to f, it holds that
f(x) > fe(x) for alla > 1.

The proofs of Theorem 11 and Theorem 12 are deferred to Section 4.

3.4 The social welfare of IPA

Next we analyze the worst case performance of the IPA for social welfare.

> Theorem 13. For any ¢ € (0,00), the inverse proportional allocation algorithm with
parameter £ obtains a worst case approximation ratio for social welfare of at least:

1 ef
p= min (1-2 +a) =1—- —_ (| —_
a oe ee) (+1 \e@e1

* In Section 5.2, we construct a variant of inverse proportional allocation that can better handle when
limaz—oo f(x) # 1 and/or when the convergence to this limit is slow.

S. Chawla and M. Jagadeesan 42:21

12  Lodewijk Gelauff, Ashish Goel, Kamesh Munagala, and Sravya Yandamuri. Advertising for
demographically fair outcomes. CoRR, abs/2006.03983, 2020.

13 Lily Hu and Yiling Chen. Fair classification and social welfare. In Proceedings of the 2020
Conference on Fairness, Accountability, and Transparency, FAT* ’20, pages 535-545, New
York, NY, USA, 2020. Association for Computing Machinery.

14 Ramesh Johari and John N. Tsitsiklis. Efficiency loss in a network resource allocation game.
Math. Oper. Res., 29(3):407-435, 2004.

15 Michael P. Kim, Aleksandra Korolova, Guy N. Rothblum, and Gal Yona. Preference-informed
fairness. In Proceedings of the 11th Innovations in Theoretical Computer Science, ITCS 2020,
Seattle, Washington, USA, January 12-14, 2020, page to appear, 2020.

16 Ava Kofman and Ariana Tobin. Facebook ads can still discriminate against women and older
workers, despite a civil rights settlement. ProPublica, 2019.

17 Anja Lambrecht and Catherine Tucker. Algorithmic bias? an empirical study of appar-
ent gender-based discrimination in the display of STEM career ads. Management Science,
65(7):2966-2981, 2019.

18 = Frank McSherry and Kunal Talwar. Mechanism design via differential privacy. In 48th Annual
IEEE Symposium on Foundations of Computer Science (FOCS 2007), October 20-23, 2007,
Providence, RI, USA, Proceedings, pages 94-103. IEEE Computer Society, 2007.

19 Milad Nasr and Michael Carl Tschantz. Bidding strategies with gender nondiscrimination
constraints for online ad auctions. In Proceedings of the 2020 Conference on Fairness,
Accountability, and Transparency, FAT* ’20, pages 337-347, New York, NY, USA, 2020.
Association for Computing Machinery.

20  Latanya Sweeney. Discrimination in online ad delivery. Commun. ACM, 56(5):44-54, 2013.

21 Yahoo. Yahoo. al - yahoo! search marketing advertising bidding data. URL: https://
webscope. sandbox. yahoo.com/catalog.php?datatype=a.

22 Muhammad Bilal Zafar, Isabel Valera, Manuel Gomez-Rodriguez, Krishna P. Gummadi, and
Adrian Weller. From parity to preference-based notions of fairness in classification. In Advances
in Neural Information Processing Systems 30: NeurIPS 2017, 4-9 December 2017, Long Beach,
CA, USA, pages 229-239, 2017.

 

42:16

Individual Fairness in Advertising Auctions Through Inverse Proportionality

nonzero allocations, t is also the unique value such that >> jelm] Gi = 1. Similarly, we see
that a = 1—t'- (1/v;), where ¢’ is the unique value such that )) j¢fm]
words, the only difference between t and t’ is that the allocations are not constrained to be

a; = 1. In other
nonnegative for t’. This implies that t’ < t, and so for i € [m]:

a; = max(0,1—t- (1/x;)) =1—t- (1/vj) <1-t'- (A/vi) =a)
as desired. <

Proof of Lemma 15. Let us consider the expression we need to bound:

 

d := max (\ 1-(|S|- dst) — max (0 1-((S'
jes IY

ul
1) gv) .
Vies g(v4)
S|-1)- S|-1)-9 (3
= max | 0,1 — —(IS1= 1) oe) )-g(vi) — max | 0,1 — _M5Il= 1) 9 (Ge) | ) 9 (38)
g(vi) t+ Viyesy ei 9(%) 9 (38) t+ Vyessixi g(vj)
We want to show that d < f¢(A). We first observe that the statement is vacuously true
when the maximum in the first term of d is equal to 0 as well as when || = 1. So henceforth

 

 

 

> assume the > 2and 1— (S| — ge) .
we assume that |S] > 2 and 1 — (|S| 1) Teor ves 007) >0
Let r denote the ratio (jeg 54; 9(v3))/g(vi). Recalling that g(vi/d?) = 7£g(v;), we get,
S|-1 |S|-1
d(r) =1- — max (0,1 — -2/—
(r) i¢r (0 1+)
|S|-1 _|Sl-1

max(|$|—1,1+A-2b) 1 +r
S

Now we will consider three cases. First, if

1 1
d(r) = ———__ — ——_
()= 5 Tae

This is identical to the expression we analysed for the 2 advertisers setting at the beginning

= 2, the expression becomes

 

 

of this section. The expression maximized at b = ‘, and we obtain

 

 

 

 

 

 

 

 

M-1 ’
d(r) < <1-24™.
Ws M+1~
Second, suppose that |S] > 2 and max(|$|—1,1+A~*r) = |S|—1. This means that
r < d*4(|S| — 2). Then we have, d(r) = 1— (|S|—1)/(1+1r). Note that d(r) is increasing as
a function of r. So in this case it is maximized at r = \?“(|S| — 2). We get
|S|—1 26
é d(r) <1- —,,,3— ~~ <1 -A = fe(rA
realli») <1 ~ Tees] —a) § my

Finally, suppose that |S| > 2 and max(|$|—1,1+A~’r) = 1+ A~?4r. This means that
r > d*4(|$| — 2). Then we have

ar) = (81-1) (7-9 - ps)

142 147
In this case, the function d(r) is non-increasing on r € [\?“(|S| — 2), 00) (see Proposition 32

in the full version of the paper.) Therefore, once again we have,

_ |S] -1
dr) $1— Tyas] =a)

This completes the proof. <

é <1-A* = f(A
r>X2"(1 51-2) 7 fe)
